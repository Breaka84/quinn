name: Unit tests

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - pyspark-version: 2.4.8  # latest published 2.x version
            pip-packages: "pypandoc==1.7 pyspark==2.4.8"  # necessary downgrade of pypandoc
          - pyspark-version: 3.0.3
            pip-packages: "pyspark==3.0.3"
          - pyspark-version: 3.1.3
            pip-packages: "pyspark==3.1.3"
          - pyspark-version: 3.2.4
            pip-packages: "pyspark==3.2.4"
          - pyspark-version: 3.3.2
            pip-packages: "pyspark==3.3.2"
          - pyspark-version: 3.4.0
            pip-packages: "pyspark==3.4.0"

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Change PySpark to version ${{ matrix.pyspark-version }}
        env:
          PIP_PACKAGES: ${{ matrix.pip-packages }}
        run: poetry add $PIP_PACKAGES

      - name: Run tests with pytest against PySpark ${{ matrix.pyspark-version }}
        run: poetry run pytest -s
